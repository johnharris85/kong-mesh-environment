apiVersion: v1
kind: Namespace
metadata:
  name: kuma-demo
  namespace: kuma-demo
  annotations:
    kuma.io/sidecar-injection: enabled
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-master
  namespace: kuma-demo
  labels:
    app: postgres
spec:
  selector:
    matchLabels:
      app: postgres
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: netshoot
        securityContext:
          runAsUser: 0
          capabilities:
            add:
            - NET_ADMIN
        image: nicolaka/netshoot
        command:
          - /bin/sleep
          - infinity
      - name: master
        image: kvn0218/postgres:latest
        env:
        - name: POSTGRES_USER
          value: kumademo
        - name: POSTGRES_PASSWORD
          value: kumademo
        - name: POSTGRES_DB
          value: kumademo
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 150m
            memory: 256Mi
        ports:
        - containerPort: 5432
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: kuma-demo
  labels:
    app: postgres
spec:
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-master
  namespace: kuma-demo
  labels:
    app: redis
spec:
  selector:
    matchLabels:
      app: redis
      role: master
      tier: backend
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
        role: master
        tier: backend
    spec:
      containers:
      - name: netshoot
        securityContext:
          runAsUser: 0
          capabilities:
            add:
            - NET_ADMIN
        image: nicolaka/netshoot
        command:
          - /bin/sleep
          - infinity
      - name: master
        image: kvn0218/kuma-redis
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 150m
            memory: 256Mi
        ports:
        - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: kuma-demo
  labels:
    app: redis
    role: master
    tier: backend
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: redis
    role: master
    tier: backend
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: kuma-demo
  annotations:
    3001.service.kuma.io/protocol: "http"
spec:
  selector:
    app: kuma-demo-backend
  ports:
  - name: api
    port: 3001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuma-demo-backend-v0
  namespace: kuma-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kuma-demo-backend
      version: v0
      env: prod
  template:
    metadata:
      labels:
        app: kuma-demo-backend
        version: v0
        env: prod
    spec:
      containers:
      - name: netshoot
        securityContext:
          runAsUser: 0
          capabilities:
            add:
            - NET_ADMIN
        image: nicolaka/netshoot
        command:
          - /bin/sleep
          - infinity
      - image: kvn0218/kuma-demo-be:latest
        name: kuma-be
        env:
        - name: POSTGRES_HOST
          value: postgres
        - name: SPECIAL_OFFER
          value: "false"
        - name: REDIS_HOST
          value: redis
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuma-demo-backend-v1
  namespace: kuma-demo
spec:
  replicas: 0
  selector:
    matchLabels:
      app: kuma-demo-backend
      version: v1
      env: intg
  template:
    metadata:
      labels:
        app: kuma-demo-backend
        version: v1
        env: intg
    spec:
      containers:
      - name: netshoot
        securityContext:
          runAsUser: 0
          capabilities:
            add:
            - NET_ADMIN
        image: nicolaka/netshoot
        command:
          - /bin/sleep
          - infinity
      - image: kvn0218/kuma-demo-be:latest
        name: kuma-be
        env:
        - name: POSTGRES_HOST
          value: postgres
        - name: REDIS_HOST
          value: redis
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuma-demo-backend-v2
  namespace: kuma-demo
spec:
  replicas: 0
  selector:
    matchLabels:
      app: kuma-demo-backend
      version: v2
      env: dev
  template:
    metadata:
      labels:
        app: kuma-demo-backend
        version: v2
        env: dev
    spec:
      containers:
      - name: netshoot
        securityContext:
          runAsUser: 0
          capabilities:
            add:
            - NET_ADMIN
        image: nicolaka/netshoot
        command:
          - /bin/sleep
          - infinity
      - image: kvn0218/kuma-demo-be:latest
        name: kuma-be
        env:
        - name: POSTGRES_HOST
          value: postgres
        - name: TOTAL_OFFER
          value: "2"
        - name: REDIS_HOST
          value: redis
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3001
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: kuma-demo
  annotations:
    8080.service.kuma.io/protocol: "http"
    ingress.kubernetes.io/service-upstream: "true"
spec:
  selector:
    app: kuma-demo-frontend
  ports:
  - name: http
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuma-demo-app
  namespace: kuma-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kuma-demo-frontend
      version: v8
      env: prod
  template:
    metadata:
      annotations:
        kuma.io/sidecar-injection: "false"
        kuma.io/builtindns: enabled
        kuma.io/builtindnsport: "15053"
        kuma.io/mesh: default
        kuma.io/sidecar-injected: "true"
        kuma.io/sidecar-uid: "5678"
        kuma.io/transparent-proxying: enabled
        kuma.io/transparent-proxying-inbound-port: "15006"
        kuma.io/transparent-proxying-inbound-v6-port: "15010"
        kuma.io/transparent-proxying-outbound-port: "15001"
        kuma.io/virtual-probes: disabled
        kuma.io/virtual-probes-port: "9000"
      labels:
        app: kuma-demo-frontend
        version: v8
        env: prod
    spec:
      containers:
      - name: netshoot
        securityContext:
          privileged: true
          runAsUser: 0
          capabilities:
            add:
            - NET_ADMIN
        image: nicolaka/netshoot
        command:
          - /bin/sleep
          - infinity
      - name: kuma-fe
        image: kvn0218/kuma-demo-fe:latest
        args: ["-P", "http://backend:3001"]
        imagePullPolicy: IfNotPresent
      - args:
        - run
        - --log-level=info
        - --concurrency=2
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: KUMA_CONTROL_PLANE_CA_CERT
          value: |
            -----BEGIN CERTIFICATE-----
            MIIDDzCCAfegAwIBAgIQU9FjrzXAwE/qhcAbCfXwhDANBgkqhkiG9w0BAQsFADAS
            MRAwDgYDVQQDEwdrdW1hLWNhMB4XDTIxMTExMjE0MDYwMVoXDTMxMTExMDE0MDYw
            MVowEjEQMA4GA1UEAxMHa3VtYS1jYTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC
            AQoCggEBAM67ltJQdafzyNMu/7+e6bDBL8SNfV8uO37wTLRWvbmLzljEodzvCcKU
            NvJhZ/+tv7t5QPGEeEwQbHI8HeWM+Nu3mlu4rb14dDh9qBHvJlAMH4tQ5Q5RP7nc
            V4YzGfXZMNlFUH9P09vcDwH1x2JkPnIVRWrPAsnet9sSFJl+NCk/cJ/8QLt0RMoT
            Q7LF+DKwvMey2Qh/yMmBX0dQ6wJ5N3RpPX488Z6lx8gtlTvjbSafdNhkdWCRF2hC
            2dTgl2V576KLfvUW4Ut+9TgpBW7pn6yGIRFs30xZAY0iJl4uX8b6eA6nD2Sskk6b
            huBaE2ElKrJhwIIoPv0VaPJeAxHayb0CAwEAAaNhMF8wDgYDVR0PAQH/BAQDAgKk
            MB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/
            MB0GA1UdDgQWBBQap9Gg4c3miEtS7kDJmrrTybXwSjANBgkqhkiG9w0BAQsFAAOC
            AQEAEU33wm31Ye7ved9QVR/QYbsKfeaGxLIB4IhelgoqT6WnB0Ru79ip8treqMli
            PW7IJb2U+RD9KsurgTE3q1dy4ttiKgiQbDgrKd1a6Y2vbzxUwC2lOKuWH0jFkmJC
            NjcTb+wjqIjQ0KyGE8dTmWrg1Oax5np+Yt5vuDp6la74GSQNMW7vSgDVktfqXD4n
            JKvRH7W6PK6zhQqBZOs3nYe8YD2sP4BXvXYofuleUzAEtPunpc/DPtMCdpZ+Dy9L
            ESNIKfsSBypEsV1wgu9ypXK70lJ3gM1Vz1f9bixiU2ZcOSU/oDCLxsEAj6Vv4VS1
            aRLryu17ohwYDINxyNeJerkTxA==
            -----END CERTIFICATE-----
        - name: KUMA_CONTROL_PLANE_URL
          value: https://kong-mesh-control-plane.kong-mesh-system:5678
        - name: KUMA_DATAPLANE_ADMIN_PORT
          value: "9901"
        - name: KUMA_DATAPLANE_DRAIN_TIME
          value: 30s
        - name: KUMA_DATAPLANE_MESH
          value: default
        - name: KUMA_DATAPLANE_NAME
          value: $(POD_NAME).$(POD_NAMESPACE)
        - name: KUMA_DATAPLANE_RUNTIME_TOKEN_PATH
          value: /var/run/secrets/kubernetes.io/serviceaccount/token
        - name: KUMA_DNS_CORE_DNS_BINARY_PATH
          value: coredns
        - name: KUMA_DNS_CORE_DNS_EMPTY_PORT
          value: "15054"
        - name: KUMA_DNS_CORE_DNS_PORT
          value: "15053"
        - name: KUMA_DNS_ENABLED
          value: "true"
        - name: KUMA_DNS_ENVOY_DNS_PORT
          value: "15055"
        image: docker.io/kong/kuma-dp:1.4.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 12
          httpGet:
            path: /ready
            port: 9901
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        name: kuma-sidecar
        readinessProbe:
          failureThreshold: 12
          httpGet:
            path: /ready
            port: 9901
            scheme: HTTP
          initialDelaySeconds: 1
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        resources:
          limits:
            cpu: "1"
            memory: 512Mi
          requests:
            cpu: 50m
            memory: 64Mi
        securityContext:
          runAsGroup: 5678
          runAsUser: 5678
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      initContainers:
      - args:
        - --redirect-outbound-port
        - "15001"
        - --redirect-inbound=true
        - --redirect-inbound-port
        - "15006"
        - --redirect-inbound-port-v6
        - "15010"
        - --kuma-dp-uid
        - "5678"
        - --exclude-inbound-ports
        - ""
        - --exclude-outbound-ports
        - ""
        - --verbose
        - --skip-resolv-conf
        - --redirect-all-dns-traffic
        - --redirect-dns-port
        - "15053"
        command:
        - /usr/bin/kumactl
        - install
        - transparent-proxy
        image: johnharris85/kuma-init:1.4.1-ct
        imagePullPolicy: IfNotPresent
        name: kuma-init
        resources:
          limits:
            cpu: 100m
            memory: 50M
          requests:
            cpu: 10m
            memory: 10M
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          runAsGroup: 0
          runAsUser: 0
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
